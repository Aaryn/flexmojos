<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright 2008 Marvin Herman Froeder
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				preinitialize="init()" creationComplete="getList()"
                layout="vertical" width="488" height="384" >

    <mx:Form width="100%" height="100%" defaultButton="{saveButton}">
        <mx:FormHeading label="Todo List" width="100%"/>
        <mx:FormItem label="ID:" width="127">
            <mx:TextInput width="100%" id="idText"
                          text="{TodoItem(todoDatagrid.selectedItem).id}" editable="false" enabled="false"/>
        </mx:FormItem>
        <mx:FormItem label="Title:" width="345">
            <mx:TextInput width="100%" id="titleText"
                          text="{TodoItem(todoDatagrid.selectedItem).title}"/>
        </mx:FormItem>
        <mx:DataGrid id="todoDatagrid" width="100%" height="100%" dataProvider="{todoItems}">
            <mx:columns>
                <mx:DataGridColumn headerText="ID" dataField="id" width="100"/>
                <mx:DataGridColumn headerText="Title" dataField="title"/>
            </mx:columns>
        </mx:DataGrid>
    </mx:Form>

    <mx:ControlBar horizontalAlign="center">
        <mx:Button label="New" click="setDefault()"/>
        <mx:Button label="Save" id="saveButton" click="save()"
                   textAlign="center"/>
        <mx:Button label="Delete" click="remove()"/>
    </mx:ControlBar>

    <mx:RemoteObject id="todoService" showBusyCursor="true"
                     fault="onFault(event)" destination="todoService">
        <mx:method name="save" result="onResultSave(event)" fault="onFault(event)"/>
        <mx:method name="remove" result="onResultRemove(event)" fault="onFault(event)"/>
        <mx:method name="getList" result="onResultGetList(event)" fault="onFault(event)"/>
    </mx:RemoteObject>

    <mx:Script>
        <![CDATA[
	        import org.sonatype.flexmojos.todolist.domain.TodoItem;
	    	import org.sonatype.flexmojos.todolist.business.ITodoService;
	    	import org.sonatype.flexmojos.todolist.business.TodoService;
	        import mx.collections.ArrayCollection;
	        import mx.rpc.events.ResultEvent;
	        import mx.rpc.events.FaultEvent;
	        import mx.rpc.Responder;
	        import mx.controls.Alert;
	        
	        
	        private var service:ITodoService;
	
	        [Bindable]
	        private var todoItems:ArrayCollection;
	
			private function init():void {
				service = new TodoService("todoService");
				service.addEventListener(FaultEvent.FAULT, onFault);
			}
	
	        public function getList():void
	        {
	            service.getList().addResponder(new mx.rpc.Responder(onResultGetList, onFault));
	        }
	
	        public function onResultGetList(event:ResultEvent):void
	        {
	            todoItems = event.result as ArrayCollection;
	        }

	        public function save():void
	        {
	            var todoItem:TodoItem = new TodoItem();
	            todoItem.id = idText.text;
	            todoItem.title = titleText.text;
	            service.save(todoItem).addResponder(new mx.rpc.Responder(onResultSave, onFault));
	        }
	
	        public function onResultSave(event:ResultEvent):void
	        {
	            status = "Item was successfully saved with ID: " + TodoItem(event.result).id;
	            getList();
	        }
	
	        public function remove():void
	        {
	            if (todoDatagrid.selectedItem != null) {
	                var todoItem:TodoItem = todoDatagrid.selectedItem as TodoItem;
	                service.remove(todoItem).addResponder(new mx.rpc.Responder(onResultRemove, onFault));
	            } else {
	                Alert.show("Select an item to delete");
	            }
	        }
	
	        public function onResultRemove(event:ResultEvent):void
	        {
	            status = "Deletion succeeded!";
	            getList();
	        }
	
	        public function setDefault():void
	        {
	            idText.text = "";
	            titleText.text = "";
	        }
	
	
	        public function onFault(event:FaultEvent):void
	        {
	            Alert.show(event.fault.message);
	        }
        ]]>
    </mx:Script>
</mx:TitleWindow>
