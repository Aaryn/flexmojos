import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;

try
{
    //final String[] SDK_SOURCES = { "automation", "flex", "framework", "haloclassic", "rpc", "utilities" };
    final String[] SDK_SOURCES = { "flex", "framework", "rpc", "utilities" };
    
    SAXReader reader = new SAXReader();
    Document document = reader.read( new File( basedir, ".actionScriptProperties" ) );
    
    List nodes = document.selectNodes( "/actionScriptProperties/compiler/libraryPath/libraryPathEntry[@sourcepath]" );
    
    if ( nodes.size() != SDK_SOURCES.length )
    {
        System.err.println( "Expected " + SDK_SOURCES.length + " applications, but found " + nodes.size() );
        return false;
    }
    
    List found = new ArrayList( 10 );
    for ( Node node : nodes )
    {
        found.add( node.valueOf( "@sourcepath" ).split( "/" )[ 2 ] );
    }
    
    List expected = new ArrayList( Arrays.asList( SDK_SOURCES ) );
    if ( !found.containsAll( expected ) )
    {
        List missing = new ArrayList( expected );
        missing.removeAll( found );
        
        List extras = new ArrayList( found );
        extras.removeAll( expected );
        
        System.err.println( "Found " + found + " sources." );
        System.err.println( "Found " + found + " sources." );
        System.err.println( "Not found " + missing + "." );
        System.err.println( "Extra " + extras + "." );
        
        return false;
    }
}
catch( Throwable t )
{
    t.printStackTrace();
    return false;
}

return true;
